// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package credentials_mock

import (
	"github.com/keptn-contrib/dynatrace-service/internal/credentials"
	"sync"
)

// DynatraceCredentialsProviderMock is a mock implementation of credentials.DynatraceCredentialsProvider.
//
// 	func TestSomethingThatUsesDynatraceCredentialsProvider(t *testing.T) {
//
// 		// make and configure a mocked credentials.DynatraceCredentialsProvider
// 		mockedDynatraceCredentialsProvider := &DynatraceCredentialsProviderMock{
// 			GetDynatraceCredentialsFunc: func(secretName string) (*credentials.DynatraceCredentials, error) {
// 				panic("mock out the GetDynatraceCredentials method")
// 			},
// 		}
//
// 		// use mockedDynatraceCredentialsProvider in code that requires credentials.DynatraceCredentialsProvider
// 		// and then make assertions.
//
// 	}
type DynatraceCredentialsProviderMock struct {
	// GetDynatraceCredentialsFunc mocks the GetDynatraceCredentials method.
	GetDynatraceCredentialsFunc func(secretName string) (*credentials.DynatraceCredentials, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetDynatraceCredentials holds details about calls to the GetDynatraceCredentials method.
		GetDynatraceCredentials []struct {
			// SecretName is the secretName argument value.
			SecretName string
		}
	}
	lockGetDynatraceCredentials sync.RWMutex
}

// GetDynatraceCredentials calls GetDynatraceCredentialsFunc.
func (mock *DynatraceCredentialsProviderMock) GetDynatraceCredentials(secretName string) (*credentials.DynatraceCredentials, error) {
	if mock.GetDynatraceCredentialsFunc == nil {
		panic("DynatraceCredentialsProviderMock.GetDynatraceCredentialsFunc: method is nil but DynatraceCredentialsProvider.GetDynatraceCredentials was just called")
	}
	callInfo := struct {
		SecretName string
	}{
		SecretName: secretName,
	}
	mock.lockGetDynatraceCredentials.Lock()
	mock.calls.GetDynatraceCredentials = append(mock.calls.GetDynatraceCredentials, callInfo)
	mock.lockGetDynatraceCredentials.Unlock()
	return mock.GetDynatraceCredentialsFunc(secretName)
}

// GetDynatraceCredentialsCalls gets all the calls that were made to GetDynatraceCredentials.
// Check the length with:
//     len(mockedDynatraceCredentialsProvider.GetDynatraceCredentialsCalls())
func (mock *DynatraceCredentialsProviderMock) GetDynatraceCredentialsCalls() []struct {
	SecretName string
} {
	var calls []struct {
		SecretName string
	}
	mock.lockGetDynatraceCredentials.RLock()
	calls = mock.calls.GetDynatraceCredentials
	mock.lockGetDynatraceCredentials.RUnlock()
	return calls
}
